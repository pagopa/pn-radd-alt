openapi: 3.0.1
info:
  title: >-
    ${stageVariables.ProjectName}-${stageVariables.MicroServiceUniqueName}-${stageVariables.IntendedUsage}
  version: ICpUuT+M54aQH5r0TAEgM/SRyPREpyZZMx7iAQg5iOA=
servers:
  - url: https://${stageVariables.DnsName}/{basePath}
    variables:
      basePath:
        default: /${stageVariables.ServiceApiPath}
    x-amazon-apigateway-endpoint-configuration:
      disableExecuteApiEndpoint: true
paths:
  /api/v1/documents/upload:
    post:
      tags:
        - documentOperations
      description: >-
        API utilizzata per la richiesta della presigned URL utilizzata per il
        caricamento della scansione dei documenti e metadati presentati a
        sportello dal cliente. Il file deve essere in formato ZIP e la struttura
        dello zip deve seguire quanto specificato in documentazione.
      operationId: documentUpload
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadResponse'
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/documents/upload
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /api/v1/documents/upload API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/documents/upload
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/download/{operationType}/{operationId}:
    parameters:
      - $ref: '#/components/parameters/operationType'
      - $ref: '#/components/parameters/operationId'
      - $ref: '#/components/parameters/attachmentId'
    get:
      tags:
        - documentOperations
      operationId: documentDownload
      description: API utilizzata per il download del frontespizio
      responses:
        '200':
          description: Ritorna il PDF del frontespizio
          content:
            application/pdf:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/download/{operationType}/{operationId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
          integration.request.path.operationType: method.request.path.operationType
          integration.request.path.operationId: method.request.path.operationId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /api/v1/download/{operationType}/{operationId} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/download/{operationType}/{operationId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.operationType: method.request.path.operationType
          integration.request.path.operationId: method.request.path.operationId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/act/inquiry:
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: '#/components/parameters/recipientTaxId'
      - $ref: '#/components/parameters/recipientType'
      - $ref: '#/components/parameters/qrCode'
      - $ref: '#/components/parameters/iun'
    get:
      tags:
        - actOperations
      operationId: actInquiry
      description: >-
        API utilizzata per la verifica della presenza a sistema di atti e
        attestazioni tramite iun o qrCode.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActInquiryResponse'
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/act/inquiry
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /api/v1/act/inquiry API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/act/inquiry
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/aor/inquiry:
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: '#/components/parameters/recipientTaxId'
      - $ref: '#/components/parameters/recipientType'
    get:
      tags:
        - aorOperations
      operationId: aorInquiry
      description: >-
        API utilizzata per la verifica della presenza a sistema di avvisi di
        avvenuta ricezione per il cliente.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AORInquiryResponse'
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/aor/inquiry
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /api/v1/aor/inquiry API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/aor/inquiry
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/act/transaction/start:
    parameters:
      - $ref: '#/components/parameters/uid'
    post:
      tags:
        - actOperations
      operationId: startActTransaction
      description: >-
        API utilizzata per la richiesta di avvio dell'operazione di scaricamento
        e consegna dell'atto e delle eventuali attestazioni.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActStartTransactionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTransactionResponse'
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/act/transaction/start
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /api/v1/act/transaction/start API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/act/transaction/start
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/act/transaction/complete:
    parameters:
      - $ref: '#/components/parameters/uid'
    post:
      tags:
        - actOperations
      operationId: completeActTransaction
      description: >-
        API utilizzata per la notifica del completamento dell'operazione di
        consegna dell'atto e delle eventuali attestazioni.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTransactionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTransactionResponse'
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/act/transaction/complete
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /api/v1/act/transaction/complete API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/act/transaction/complete
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/act/transaction/abort:
    parameters:
      - $ref: '#/components/parameters/uid'
    post:
      tags:
        - actOperations
      operationId: abortActTransaction
      description: >-
        API utilizzata per la notifica  dell'annullamento dell'operazione di
        consegna dell'atto e delle eventuali attestazioni.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbortTransactionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbortTransactionResponse'
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/act/transaction/abort
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /api/v1/act/transaction/abort API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/act/transaction/abort
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/aor/transaction/start:
    parameters:
      - $ref: '#/components/parameters/uid'
    post:
      tags:
        - aorOperations
      operationId: startAorTransaction
      description: >-
        API utilizzata per la richiesta di avvio delloperazione di scaricamento
        e consegna degli avvisi di avvenuta ricezione.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AorStartTransactionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTransactionResponse'
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/aor/transaction/start
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /api/v1/aor/transaction/start API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/aor/transaction/start
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/aor/transaction/complete:
    parameters:
      - $ref: '#/components/parameters/uid'
    post:
      tags:
        - aorOperations
      operationId: completeAorTransaction
      description: >-
        API utilizzata per la notifica  del completamento dell'operazione di
        consegna dell'atto.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTransactionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTransactionResponse'
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/aor/transaction/complete
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /api/v1/aor/transaction/complete API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/aor/transaction/complete
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/aor/transaction/abort:
    parameters:
      - $ref: '#/components/parameters/uid'
    post:
      tags:
        - aorOperations
      operationId: abortAorTransaction
      description: >-
        API utilizzata per la notifica dell'annullamento dell'operazione di
        consegna del/degli avviso/i di avvenuta ricezione.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbortTransactionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbortTransactionResponse'
        '400':
          $ref: '#/components/responses/Invalid'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/aor/transaction/abort
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /api/v1/aor/transaction/abort API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/aor/transaction/abort
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/registry:
    post:
      tags:
        - Registry
      description: API utilizzata per la richiesta di attivazione nuova anagrafica RADD
      operationId: addRegistry
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRegistryResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Not Allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    get:
      tags:
        - Registry
      operationId: retrieveRegistries
      description: >-
        API utilizzata per recuperare la lista paginata di anagrafiche RADD dato
        il cxId
      parameters:
        - $ref: '#/components/parameters/uid'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/lastKey'
        - $ref: '#/components/parameters/cap'
        - $ref: '#/components/parameters/city'
        - $ref: '#/components/parameters/pr'
        - $ref: '#/components/parameters/externalCode'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistriesResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Not Allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /api/v1/registry API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/registry/{registryId}:
    patch:
      tags:
        - Registry
      description: API utilizzata per la modifica di un'anagrafica RADD
      operationId: updateRegistry
      parameters:
        - $ref: '#/components/parameters/uid'
        - $ref: '#/components/parameters/registryId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegistryRequest'
        required: true
      responses:
        '204':
          description: OK
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found - Punto di ritiro SEND non trovato
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Not Allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/{registryId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
          integration.request.path.registryId: method.request.path.registryId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /api/v1/registry/{registryId} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/{registryId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.registryId: method.request.path.registryId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/registry/{registryId}/dismiss:
    patch:
      tags:
        - Registry
      description: API utilizzata per la cancellazione di un'anagrafica RADD
      operationId: deleteRegistry
      parameters:
        - $ref: '#/components/parameters/uid'
        - $ref: '#/components/parameters/registryId'
        - $ref: '#/components/parameters/endDate'
      responses:
        '204':
          description: OK
        '400':
          description: >-
            Bad Request - Data di fine validità non valida, in quanto non
            rispetta il preavviso di cancellazione
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found - Punto di ritiro SEND non trovato
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Not Allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/{registryId}/dismiss
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
          integration.request.path.registryId: method.request.path.registryId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /api/v1/registry/{registryId}/dismiss API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/{registryId}/dismiss
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.registryId: method.request.path.registryId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/registry/import/upload:
    post:
      tags:
        - Import
      description: >-
        API utilizzata per la richiesta della presigned URL utilizzata per il
        caricamento del file CSV contenente la lista di sportelli di un soggetto
        RADD.
      operationId: uploadRegistryRequests
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryUploadRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryUploadResponse'
        '400':
          description: >-
            Bad Request - Non è permesso l'upload di un nuovo file CSV se esiste
            già una richiesta di import in corso
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Not Allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '409':
          description: Conflict - Non è permesso l'upload dello stesso file CSV più volte
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/import/upload
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /api/v1/registry/import/upload API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/import/upload
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/registry/import/{requestId}/verify:
    get:
      tags:
        - Import
      description: >-
        API utilizzata per la verifica dello stato di una richiesta di
        censimento indirizzi (CSV)
      operationId: verifyRequest
      parameters:
        - $ref: '#/components/parameters/uid'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyRequestResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found - Richiesta di import non trovata
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Not Allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/import/{requestId}/verify
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
          integration.request.path.requestId: method.request.path.requestId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /api/v1/registry/import/{requestId}/verify API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/import/{requestId}/verify
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.requestId: method.request.path.requestId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /api/v1/registry/import/{requestId}:
    get:
      tags:
        - Import
      description: >-
        API utilizzata per il recupero della lista paginata di tutte le
        richieste di inserimento in anagrafica associate alla richiesta di
        import
      operationId: retrieveRequestItems
      parameters:
        - $ref: '#/components/parameters/uid'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/lastKey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found - Richiesta di import non trovata
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Not Allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_b2bAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/import/{requestId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: context.authorizer.sourceChannel
          integration.request.path.requestId: method.request.path.requestId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /api/v1/registry/import/{requestId} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/api/v1/registry/import/{requestId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.requestId: method.request.path.requestId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
components:
  parameters:
    uid:
      name: uid
      description: Identificativo pseudo-anonimizzato dell'operatore RADD
      in: header
      required: true
      schema:
        type: string
    recipientTaxId:
      name: recipientTaxId
      description: Codice Fiscale Destinatario
      in: query
      required: true
      schema:
        type: string
      example: TNTGTR76E21H751S
    recipientType:
      name: recipientType
      description: Sigla, Persona Fisica o Persona Giuridica
      in: query
      required: true
      schema:
        type: string
        enum:
          - PF
          - PG
      example: PF
    delegateTaxId:
      name: delegateTaxId
      description: Codice Fiscale Delegato
      in: query
      schema:
        type: string
      example: TNTGTR76E21H751S
    qrCode:
      name: qrCode
      description: >-
        QrCode presente sull'Avviso di Avvenuta Ricezione (AAR). Da usare in
        alternativa a "iun".
      in: query
      required: false
      schema:
        type: string
      example: >-
        UkdESC1BS01QLVFWWE4tMjAyMzA4LUctMV9QRi1lZjJkZWI0NS0zYzBlLTRiY2UtYWRjMC1hODFlN2Q2YjM1NGVfY2M5ZDkyMTktMWQxMi00ZTBhLWJlZDQtNmE1YWMyYzlhZmZh
    iun:
      name: iun
      description: >-
        Identificativo Univoco della Notifica. Da usare in alternativa a
        "qrCode".
      in: query
      required: false
      schema:
        type: string
      example: RGDH-AKMP-QVXN-202308-G-1
    operationId:
      name: operationId
      description: >-
        identificativo univoco dell'operazione all'interno del dominio
        dell'operatore RADD
      in: path
      required: true
      schema:
        type: string
      example: 5d2d53ad-6306-40fe-8126-51ccdd917cef
    operationType:
      name: operationType
      description: Tipo di operazione aor o act
      in: path
      required: true
      schema:
        type: string
        enum:
          - aor
          - act
      example: aor
    attachmentId:
      name: attachmentId
      description: Identificativo file
      in: query
      required: false
      schema:
        type: string
    status:
      name: status
      description: Identificativo dello sportello RADD
      in: query
      schema:
        type: string
        enum:
          - ACTIVE
          - REJECTED
          - PENDING
    registryId:
      name: registryId
      description: Identificativo dello sportello RADD
      in: path
      required: true
      schema:
        type: string
      example: cxId#uuid
    endDate:
      name: endDate
      description: Data fine validità sportello
      in: query
      required: true
      schema:
        type: string
      example: '2024-06-21T00:00:00.000Z'
    requestId:
      name: requestId
      description: Identificativo univoco della richiesta di censimento (CSV o CRUD)
      in: path
      required: true
      schema:
        type: string
    limit:
      name: limit
      in: query
      schema:
        type: number
        default: 10
    lastKey:
      name: lastKey
      in: query
      required: false
      schema:
        type: string
    cap:
      name: cap
      description: CAP
      in: query
      required: false
      schema:
        type: string
    city:
      name: city
      description: Città
      in: query
      required: false
      schema:
        type: string
    pr:
      name: pr
      description: Provincia
      in: query
      required: false
      schema:
        type: string
    externalCode:
      name: externalCode
      description: Identificativo punto ritiro SEND indicato dal client
      in: query
      required: false
      schema:
        type: string
  schemas:
    DocumentUploadRequest:
      description: >-
        Richiesta di upload di un file zip contenente i documenti/metadati verso
        PagoPA
      type: object
      required:
        - operationId
        - checksum
      properties:
        operationId:
          type: string
        checksum:
          type: string
          example: 708F4C8216F30FA6007F8E2F316ECC935D94057202FC5D8008BCCC118EA12560
    DocumentUploadResponse:
      description: Response della Richiesta di upload
      type: object
      properties:
        url:
          type: string
          example: >-
            https://presignedurldemo.s3.eu-west-2.amazonaws.com/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJJWZ7B6WCRGMKFGQ%2F20180210%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20180210T171315Z&X-Amz-Expires=1800&X-Amz-Signature=12b74b0788aa036bc7c3d03b3f20c61f1f91cc9ad8873e3314255dc479a25351&X-Amz-SignedHeaders=host
        fileKey:
          type: string
          example: PN_RADD_ALT_ATTACHMENT-4958442ee6eb467abec049afa67e3899.zip
        secret:
          type: string
          example: alow22ddw
        status:
          $ref: '#/components/schemas/ResponseStatus'
    ActInquiryResponse:
      description: >-
        Response di verifica presenza atto ed eventuali attestazione opponibili
        a terzi
      type: object
      properties:
        result:
          type: boolean
        status:
          $ref: '#/components/schemas/ActInquiryResponseStatus'
    AORInquiryResponse:
      description: Response di verifica presenza AAR.
      type: object
      properties:
        result:
          type: boolean
          example: true
        status:
          $ref: '#/components/schemas/ResponseStatus'
    ActStartTransactionRequest:
      description: Richiesta  di completamento operazione.
      allOf:
        - $ref: '#/components/schemas/AorStartTransactionRequest'
      properties:
        qrCode:
          description: in alternativa allo iun
          type: string
        iun:
          description: in alternativa al qrCode
          type: string
    StartTransactionResponse:
      description: Response alla richiesta di avvio della transazione
      type: object
      properties:
        downloadUrlList:
          type: array
          items:
            $ref: '#/components/schemas/DownloadUrl'
        status:
          $ref: '#/components/schemas/StartTransactionResponseStatus'
    DownloadUrl:
      description: >-
        contiene l'url per il download e il meccanismo richiesto di
        autenticazione
      type: object
      properties:
        url:
          type: string
          description: url per il download del documento
        needAuthentication:
          type: boolean
          description: indica se inviare l'header di autenticazione con il token JWT
        documentType:
          type: string
          description: >-
            categoria del documento, ATTO_NOTIFICATO oppure
            ATTESTAZIONE_OPPONIBILE_A_TERZI
    AorStartTransactionRequest:
      description: Richiesta  di completamento operazione
      type: object
      required:
        - versionToken
        - operationId
        - recipientTaxId
        - recipientType
        - fileKey
        - checksum
      properties:
        versionToken:
          type: string
          description: >-
            valore della versione del file restituito dall'operazione PUT di
            updload.
          example: OXSnS_28NF1sKiaZsniWHbqwX2LktjCd
        operationId:
          type: string
          description: >-
            identificativo univoco dell'operazione all'interno del dominio
            dell'operatore RADD
          example: 5d2d53ad-6306-40fe-8126-51ccdd917cef
        recipientTaxId:
          type: string
          example: TNTGTR76E21H751S
        recipientType:
          type: string
          enum:
            - PF
            - PG
          example: PF
        delegateTaxId:
          type: string
          example: RFRGRZ66E21H751B
        fileKey:
          type: string
          example: PN_RADD_ALT_ATTACHMENT-17a4d40e08d8498a9d78f495c6bfd56a.zip
        checksum:
          type: string
          example: Kg2Uwyt7rYE4II1giJwh2MtaNtq6Obup2eDE0kAps+c=
          description: >-
            Checksum SHA256 del file caricato nella chiamata di documetUpload
            codificato in base64
        operationDate:
          type: string
          format: date-time
          description: Data/ora di inizio della transazione in formato RFC3339.
          example: '2022-06-21T11:44:28Z'
    CompleteTransactionRequest:
      description: Richiesta  di chiusura della transazione
      type: object
      required:
        - operationId
        - operationDate
      properties:
        operationId:
          type: string
          description: >-
            identificativo univoco dell'operazione all'interno del dominio
            dell'operatore RADD
          example: 5d2d53ad-6306-40fe-8126-51ccdd917cef
        operationDate:
          type: string
          format: date-time
          description: >-
            Data/ora di completamento della transazione,  espressa in formato
            RFC3339.
          example: '2022-06-21T11:44:28Z'
    CompleteTransactionResponse:
      description: Response alla richiesta di chiusura della transazione
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TransactionResponseStatus'
    AbortTransactionRequest:
      description: Richiesta  di cancellazione della transazione
      type: object
      required:
        - operationId
        - operationDate
      properties:
        operationId:
          type: string
          description: >-
            identificativo univoco dell'operazione all'interno del dominio
            dell'operatore RADD
          example: 5d2d53ad-6306-40fe-8126-51ccdd917cef
        reason:
          type: string
          default: abort
        operationDate:
          type: string
          format: date-time
          description: >-
            Data/ora di annullamento della transazione, espressa in formato
            RFC3339.
          example: '2022-06-21T11:44:28Z'
    AbortTransactionResponse:
      description: Response alla richiesta di chiusura della transazione
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TransactionResponseStatus'
    ResponseStatus:
      description: Risposta di stato restituita al chiamante
      type: object
      properties:
        code:
          description: |
            Return code.
            * 0 -> OK
            * 99 -> KO
          type: number
          enum:
            - 0
            - 99
        message:
          type: string
          example: OK
    StartTransactionResponseStatus:
      description: Risposta di stato restituita al chiamante
      allOf:
        - $ref: '#/components/schemas/ResponseStatus'
        - type: object
          properties:
            code:
              description: >
                Return code.

                * 0 -> OK

                * 2 -> NotReady (documenti temporaneamente non disponibili per
                ragioni tecniche, ritentare dopo il tempo specificato nel
                retryAfter con una nuova transaction)

                * 3 -> Stampa già eseguita

                * 4 -> Documenti non disponibili

                * 5 -> Codice operationId già presente

                * 10 -> Input non valido

                * 80 -> Notifica annullata dalla PA

                * 99 -> KO
              type: number
              enum:
                - 0
                - 99
                - 2
                - 4
                - 3
                - 5
                - 10
                - 80
            retryAfter:
              description: >-
                Tempo, espresso in ms comunicato  al chiamante, trascorso il
                quale è possibile effettuare un nuovo tentativo di avvio della
                transazione.
              type: number
              example: 670
    TransactionResponseStatus:
      description: Risposta di stato restituita al chiamante
      allOf:
        - $ref: '#/components/schemas/ResponseStatus'
        - type: object
          properties:
            code:
              description: >
                Return code.

                * 0 -> OK (Anche in caso di  chiamata successiva con identici
                parametri)

                * 1 -> Transazione inesistente

                * 2 -> Transazione già completata (Messaggio di errore
                differente se già completata per chiamata a complete piuttosto
                che abort)

                * 99 -> KO
              type: number
              enum:
                - 0
                - 1
                - 2
                - 99
    ActInquiryResponseStatus:
      description: Risposta di stato restituita al chiamante
      allOf:
        - $ref: '#/components/schemas/ResponseStatus'
        - type: object
          properties:
            code:
              description: >
                Return code.

                * 0 -> OK

                * 2 -> NotReady (documenti temporaneamente non disponibili per
                ragioni tecniche, ritentare dopo il tempo specificato nel
                retryAfter)

                * 3 -> Stampa già eseguita

                * 4 -> Documento non più disponibili

                * 10 -> Input non valido

                * 80 -> Notifica annullata dalla PA

                * 99 -> KO generico
              type: number
              enum:
                - 0
                - 2
                - 3
                - 4
                - 10
                - 80
                - 99
    ErrorResponse:
      description: Risposta di errore
      properties:
        type:
          type: string
          description: descrizione tipologia errore
        status:
          type: number
          description: codice http dell'errore
        title:
          type: string
          description: descrizione errore
        detail:
          type: string
          description: dettaglio errore
        traceId:
          type: string
          description: id traccia
        timestamp:
          type: string
          description: timestamp dell'evento
        errors:
          type: array
          description: dettagli relativi all'errore
          items:
            type: string
    CreateRegistryRequest:
      type: object
      required:
        - address
      properties:
        address:
          $ref: '#/components/schemas/Address'
        description:
          type: string
          description: Descrizione dello sportello.
          example: Sportello ABC.
        phoneNumber:
          type: string
          description: Numero di telefono dello sportello.
          example: +39 0123456789
        geoLocation:
          $ref: '#/components/schemas/GeoLocation'
        capacity:
          type: string
          description: >-
            Numero massimo di pratiche mensili che il punto di Ritiro SEND può
            gestire.
          example: 100
        openingTime:
          type: string
          description: Orario di apertura dello sportello.
          example: mon=10:00-13:00_14:00-20:00#tue=10:00-20:00#
        startValidity:
          type: string
          description: >-
            Data di inizio di validità dello sportello in formato (yyyy-MM-dd),
            se non inviata viene considerata la data corrente.
          example: '2024-03-21'
        endValidity:
          type: string
          description: Data di fine di validità dello sportello in formato (yyyy-MM-dd).
          example: '2024-03-21'
        externalCode:
          type: string
          description: Identificativo punto ritiro SEND
    UpdateRegistryRequest:
      type: object
      properties:
        description:
          type: string
          description: Descrizione aggiornata dello sportello.
          example: Registro aggiornato dello sportello.
        openingTime:
          type: string
          description: Orario di apertura aggiornato dello sportello.
          example: mon=10:00-13:00_14:00-20:00#tue=10:00-20:00#
        phoneNumber:
          type: string
          description: Numero di telefono della sede
          example: +39 0123456789
    CreateRegistryResponse:
      type: object
      properties:
        requestId:
          type: string
    RegistriesResponse:
      type: object
      properties:
        registries:
          type: array
          items:
            $ref: '#/components/schemas/Registry'
        moreResult:
          description: >-
            Indica se sono presenti ulteriori pagine di risultati oltre a quelle
            restituite dalle chiavi contenute nel campo __nextPagesKey__.
          type: boolean
        nextPagesKey:
          description: >-
            Elenco delle chiavi da utilizzare per richiedere le pagine di
            risultati successive a quella corrente.  L'ordine delle chiavi
            restituite equivale all'ordine delle pagine di risultati. Se
            __moreResult__ è true, sono presenti ulteriori pagine di risultati
            oltre a quelle restituite dalle chiavi contenute in questo campo.
          type: array
          items:
            type: string
    Registry:
      type: object
      properties:
        registryId:
          type: string
          description: >-
            identificativo univoco della sede RADD popolato solo in caso di
            record in stato ACCEPTED
        requestId:
          type: string
          description: ID della richiesta di import.
          example: '987654'
        address:
          $ref: '#/components/schemas/Address'
        description:
          type: string
          description: Descrizione dello sportello.
          example: Sportello ABC.
        phoneNumber:
          type: string
          description: Numero di telefono dello sportello.
          example: +39 0123456789
        geoLocation:
          $ref: '#/components/schemas/GeoLocation'
        openingTime:
          type: string
          description: Orario di apertura dello sportello.
          example: mon=10:00-13:00_14:00-20:00#tue=10:00-20:00#
        startValidity:
          type: string
          format: date-time
          description: Data e ora di inizio di validità dello sportello.
          example: '2024-03-21T09:00:00Z'
        endValidity:
          type: string
          format: date-time
          description: Data e ora di fine di validità dello sportello.
          example: '2024-03-21T17:00:00Z'
        externalCode:
          type: string
          description: Identificativo punto ritiro SEND
          example: '123456'
        capacity:
          description: >-
            Numero massimo di pratiche mensili che il punto di Ritiro SEND può
            gestire.
          example: 100
    VerifyRequestResponse:
      type: object
      properties:
        requestId:
          type: string
          description: Identificativo univoco della richiesta di censimento
        status:
          type: string
          description: >-
            Stato della richiesta (possibili valori = NOT_WORKED, PENDING,
            ACCEPTED, REJECTED, DELETED)
          example: REJECTED
        error:
          type: string
          description: Eventuale errore, popolato solo in caso di status = REJECTED.
          example: csv malformato
    Address:
      type: object
      required:
        - addressRow
        - cap
        - city
        - pr
      properties:
        addressRow:
          type: string
          description: Indirizzo completo
          example: Via Roma 123
        cap:
          type: string
          description: CAP (Codice di Avviamento Postale).
          example: 100
        city:
          type: string
          description: Città.
          example: Roma
        pr:
          type: string
          description: Provincia.
          example: RM
        country:
          type: string
          description: Paese.
          example: Italia
    GeoLocation:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: string
          description: Latitudine della posizione geografica dello sportello.
          example: '41.9028'
        longitude:
          type: string
          description: Longitudine della posizione geografica dello sportello.
          example: '12.4964'
    ProblemError:
      properties:
        code:
          description: Internal code of the error, in human-readable format
          example: >-
            PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY
            | etc...
          type: string
        element:
          description: Parameter or request body field name for validation error
          example: body.order.item[2].quantity
          type: string
        detail:
          description: >-
            A human readable explanation specific to this occurrence of the
            problem.
          example: Parameter not valid
          maxLength: 1024
          type: string
      required:
        - code
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: number
          example: 503
          maximum: 600
          minimum: 100
          exclusiveMaximum: true
        title:
          description: >-
            A short, summary of the problem type. Written in english and
            readable
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,4096}$
          type: string
        traceId:
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
          type: string
        timestamp:
          description: date and time referred to UTC
          example: '2022-07-27T12:22:33.444Z'
          type: string
          format: date-time
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      required:
        - status
        - errors
    RequestResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RegistryRequestResponse'
        moreResult:
          description: >-
            Indica se sono presenti ulteriori pagine di risultati oltre a quelle
            restituite dalle chiavi contenute nel campo __nextPagesKey__.
          type: boolean
        nextPagesKey:
          description: >-
            Elenco delle chiavi da utilizzare per richiedere le pagine di
            risultati successive a quella corrente.  L'ordine delle chiavi
            restituite equivale all'ordine delle pagine di risultati. Se
            __moreResult__ è true, sono presenti ulteriori pagine di risultati
            oltre a quelle restituite dalle chiavi contenute in questo campo.
          type: array
          items:
            type: string
    RegistryRequestResponse:
      type: object
      properties:
        requestId:
          type: string
          description: identificativo univoco della richiesta
        registryId:
          type: string
          description: >-
            identificativo univoco della sede RADD attivata a partire dalla
            richiesta
        originalRequest:
          $ref: '#/components/schemas/OriginalRequest'
        createdAt:
          type: string
          description: data creazione del record
        updatedAt:
          type: string
          description: data aggiornamento del record
        status:
          type: string
          description: stato della richiesta
          example: ACCEPTED
        error:
          type: string
          description: >-
            eventuale motivazione di scarto, popolato solo in caso di stato
            REJECTED
    OriginalRequest:
      type: object
      properties:
        originalAddress:
          $ref: '#/components/schemas/Address'
        description:
          type: string
          description: Descrizione dello sportello.
          example: Sportello ABC.
        phoneNumber:
          type: string
          description: Numero di telefono dello sportello.
          example: +39 0123456789
        geoLocation:
          $ref: '#/components/schemas/GeoLocation'
        openingTime:
          type: string
          description: Orario di apertura dello sportello.
          example: mon=10:00-13:00_14:00-20:00;tue=10:00-20:00
        startValidity:
          type: string
          format: date-time
          description: Data e ora di inizio di validità dello sportello.
          example: '2024-03-21T09:00:00Z'
        endValidity:
          type: string
          format: date-time
          description: Data e ora di fine di validità dello sportello.
          example: '2024-03-21T17:00:00Z'
        externalCode:
          type: string
          description: Identificativo punto ritiro SEND
        capacity:
          type: string
          description: >-
            Numero massimo di pratiche mensili che il punto di Ritiro SEND può
            gestire.
          example: 100
    RegistryUploadRequest:
      description: >-
        Richiesta di upload di un file csv contenente una lista di sportelli da
        censire
      type: object
      required:
        - checksum
      properties:
        checksum:
          type: string
          example: 708F4C8216F30FA6007F8E2F316ECC935D94057202FC5D8008BCCC118EA12560
    RegistryUploadResponse:
      description: >-
        Risposta alla richiesta di upload di un file csv contenente una lista di
        sportelli da censire
      type: object
      properties:
        requestId:
          description: >-
            Identificativo univoco della richiesta di censimento, da utilizzare
            in caso di verifica dello stato della richiesta o recupero degli
            sportelli associati.
          type: string
          example: '987654'
        url:
          type: string
          example: >-
            https://presignedurldemo.s3.eu-west-2.amazonaws.com/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJJWZ7B6WCRGMKFGQ%2F20180210%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20180210T171315Z&X-Amz-Expires=1800&X-Amz-Signature=12b74b0788aa036bc7c3d03b3f20c61f1f91cc9ad8873e3314255dc479a25351&X-Amz-SignedHeaders=host
        fileKey:
          type: string
          example: PN_RADD_ALT_ATTACHMENT-4958442ee6eb467abec049afa67e3899.zip
        secret:
          type: string
          example: alow22ddw
  responses:
    Forbidden:
      description: Forbidden
    NotFound:
      description: Not found
    Invalid:
      description: Bad Request
    NotAllowed:
      description: Method not allowed
    InternalError:
      description: Internal Server Error
    Unauthorized:
      description: Unauthorized
  securitySchemes:
    pn-auth-fleet_b2bAuthorizer_openapi:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:pn-b2bAuthorizerLambda/invocations
        authorizerResultTtlInSeconds: 60
        identitySource: method.request.header.Authorization
        type: request
tags:
  - name: actOperations
    description: >-
      API di interrogazione per il recupero dei documenti della notifica
      dall'AAR.
  - name: aorOperations
    description: >-
      API di interrogazione per il recupero di avvisi di avvenuta ricezione per
      destinatari irreperibili.
  - name: documentOperations
    description: API gestione file.
  - name: Registry
  - name: Import
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  BAD_REQUEST_PARAMETERS:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_PARAMETERS",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
  BAD_REQUEST_BODY:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_BODY",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-request-validator: basic
