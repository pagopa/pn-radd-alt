openapi: 3.0.1
info:
  termsOfService: https://notifichedigitali.pagopa.it/radd/index.html
  x-api-id: api-internal-radd-net # NO EXTERNAL
  #  x-api-id: api-external-radd-net # ONLY EXTERNAL
  title: 'Piattaforma Notifiche: API B2B per gli operatori RADD'
  x-summary: 'Piattaforma Notifiche: API B2B per gli operatori RADD'
  version: '1.0.0'
  description: > 
    # Abstract
  
      API utilizzate dai soggetti abilitati (Operatori RADD) all’utilizzo dei
      sistemi **RADD** (Rete di Assorbimento del Divario Digitale) per rendere
      fruibile **SEND** anche a destinatari in condizione di Digital Divide,
      intesi come non dotati di **SPID** o di **CIE**, che per questo non possono
      accedere alla notifica tramite portale web o per mezzo di **app IO**. 
  
       
      Esistono due casi d’uso **RADD**:  
  
  
      - **ACT**: Richiesta degli atti e delle attestazioni opponibili di una
      determinata notifica tramite i dati presenti nell’avviso di avvenuta
      ricezione (**AAR**). 
  
  
      - **AOR**: Richiesta degli avvisi di avvenuta ricezione (**AAR**) non
      recapitati per irreperibilità.
  
  
      # Autenticazione 
  
      L'ente che si integra con le API REST della RADD deve autenticarsi tramite
      JSON Web Token (JWT) firmato con algoritmo a chiave asimmetrica RS256. Il
      token deve essere passato sull'header Authorization della richiesta nella
      forma: *Authorization: Bearer < token >*.
      
      # CASO D’USO ACT
  
      Cittadini in possesso della AAR (Avviso di Avvenuta Ricezione) che
      richiedono la stampa degli atti della notifica. 
  
  
      Operazioni utilizzate, in sequenza temporale: 
  
  
      1. **Verifica della presenza della notifica:**
        
         Il software di gestione dello sportello RADD chiama l’operazione [actInquiry](#/actOperations/actInquiry)
      per verificare l’esistenza della notifica tramite *iun* (identificativo della
      notifica) o *qrCode*, entrambi presenti nell’AAR, e la disponibilità per la
      stampa dei relativi documenti. Il servizio risponde con il campo *result*
      valorizzato a true e *code* uguale a 0 se sono presenti documenti da stampare.
  
  
      2. **Upload dei documenti di identificazione del destinatario ed eventuale
      delegato:** 
         
         Se sono presenti documenti da stampare (*result* = true e *code* =  0) il software di gestione dello sportello RADD deve generare un file **ZIP**
      (specifiche in appendice) contenente i documenti/metadati del destinatario
      ed eventuale delegato da caricare sui sistemi PagoPA. Per caricare il file
      ZIP utilizzare la **procedura di upload** specificata in appendice.
  
  
      3. **Richiesta documenti da stampare:** 
      
         Se l'operazione di upload è stata
      eseguita con successo (risposta http status 200 OK)  invocare l’operazione
      [startActTransaction](#/actOperations/startActTransaction) per ottenere la lista dei documenti da stampare
      (compreso il frontespizio*).
      
         Tra i parametri da passare in input ci sono:
         
         - *filekey*, che deve essere recuperato dalla risposta alla chiamata
      dell’operazione [documentUpload](#/documentOperations/documentUpload).
      
         - [*checksum*](https://docs.pagopa.it/f.a.q.-per-integratori/knowledge-base-di-piattaforma-notifiche/focus-sullinserimento-della-notifica/inserimento-notifica-con-il-comando-curl#id-1-generare-il-checksum-sha256-codificato-in-base-64-del-contenuto-binario-dei-pdf-di-notifica.pdf-e), lo stesso valore inviato in input alla documentUpload. 
         
         L’operazione [startActTransaction](#/actOperations/startActTransaction) restituisce una lista di url dei documenti
      degli avvisi di avvenuta ricezione da stampare (compreso il primo riferito
      al frontespizio)*. 
      
         Per ogni documento vengono restituiti i seguenti campi:
         
         - *url*: La url che permette di scaricare il documento.
         - *needAuthentication*: 
      booleano. Se true all’invocazione della url deve essere passato il JWT
      dell’autenticazione.
         - *documentType*: stringa che rappresenta il tipo di
      documento.
      
         ***Frontespizio**: Per questione di privacy SEND produrrà un frontespizio
      per il plico dei documenti stampati dall’operatore RADD. Il frontespizio
      riporterà semplicemente il nome e il cognome del destinatario.
  
  
      4. **Download documenti**
      
         Per ogni url restituita dalla [startActTransaction](#/actOperations/startActTransaction), eseguire una richiesta in
      GET per scaricare il documento. Se il campo *needAuthentication* è valorizzato
      a true bisogna necessariamente inviare anche il JWT nell’header
      Authorization, altrimenti non deve essere passato.
  
  
      5. **Chiusura dell'operazione**
      
         - **5a** **Chiusura dell’operazione con successo**
         
           A fine operazione invocare  l’operazione [completeActTransaction](#/actOperations/completeActTransaction) per terminare il processo.
           
         - **5b** **Chiusura dell’operazione senza successo** 
         
           In caso di operazione di stampa conclusa senza successo o per un qualsiasi problema tecnico, invocare l’operazione [abortActTransaction](#/actOperations/abortActTransaction) per abortire il processo. 
      
      # CASO D’USO AOR
   
   
      Cittadini irreperibili, muniti di Codice Fiscale, sprovvisti di accesso ad internet, SPID o CIE o senza competenze digitali, che richiedono la stampa di AAR (Avviso di Avvenuta Ricezione) non consegnate.
      
  
      1. **Verifica della presenza della notifica** 
  
         Il software di gestione dello sportello RADD chiama l’operazione [aorInquiry](#/aorOperations/aorInquiry) per verificare l’esistenza della presenza a sistema di notifiche per il quale l’utente risulta totalmente irreperibile, non stampate in precedenza. 
      Il servizio risponde con il campo *result* valorizzato a true e *code* uguale a 0 se sono presenti documenti da stampare. 
      
  
      2. **Upload dei documenti di identificazione del destinatario ed eventuale delegato** 
      
         Se sono presenti documenti da stampare (*result* = true e *code* =  0) il software di gestione dello sportello RADD deve generare un file **ZIP** (specifiche in appendice) contenente i documenti/metadati del destinatario ed eventuale delegato da caricare sui sistemi PagoPA. 
      Per caricare il file ZIP utilizzare la **procedura di upload** specificata in appendice. 
  
  
      3.  **Richiesta documenti da stampare**
      
           Se l'operazione di upload è stata eseguita con successo (risposta http status 200 OK)  
      invocare l’operazione [startAorTransaction](#/aorOperations/startAorTransaction) per ottenere l’elenco dei link degli AAR delle 
      notifiche non consegnate da stampare (compreso il frontespizio*).
      
          Tra i parametri da passare in input ci sono:
          
          - *filekey*, che deve essere recuperato dalla risposta alla chiamata dell’operazione **documentUpload**.
          
          - [*checksum*](https://docs.pagopa.it/f.a.q.-per-integratori/knowledge-base-di-piattaforma-notifiche/focus-sullinserimento-della-notifica/inserimento-notifica-con-il-comando-curl#id-1-generare-il-checksum-sha256-codificato-in-base-64-del-contenuto-binario-dei-pdf-di-notifica.pdf-e), lo stesso valore inviato in input alla [documentUpload](#/documentOperations/documentUpload).
          
          L’operazione [startAorTransaction](#/aorOperations/startAorTransaction) restituisce una lista di url dei documenti degli avvisi di avvenuta ricezione da stampare (compreso il primo riferito al frontespizio)*.
          
          Per ogni documento vengono restituiti i seguenti campi:
          
          - *url*: La url che permette di scaricare il documento.
          
          - *needAuthentication*:  booleano. Se true all’invocazione della url deve essere passato il JWT dell’autenticazione.
          
          - *documentType*: stringa che rappresenta il tipo di documento da scaricare.
          
          ***Frontespizio**: Per questione di privacy SEND produrrà un frontespizio per il plico dei documenti stampati dall’operatore RADD. Il frontespizio riporterà semplicemente il nome e il cognome del destinatario.
   
   
      4. **Download documenti**
      
         Per ogni url restituita dalla [startAorTransaction](#/aorOperations/startAorTransaction), eseguire una richiesta in GET per scaricare il documento. Se il campo *needAuthentication* è valorizzato a true bisogna necessariamente inviare anche il JWT, altrimenti non deve essere passato.
   
   
       5. **Chiusura dell’operazione**
       
          - **5a Chiusura dell’operazione con successo**
          
            A fine operazione invocare  l’operazione [completeAorTransaction](#/aorOperations/completeAorTransaction) per terminare il processo.  
      
          - **5b Chiusura dell’operazione senza successo**
          
              In caso di operazione di stampa conclusa senza successo o per un qualsiasi problema tecnico invocare l’operazione [abortAorTransaction](#/aorOperations/abortAorTransaction) per abortire il processo. 
               
          NOTA BENE 
          
          Tutte le api sopra descritte richiedono il seguente parametro:
          
           -  *Uid* : Identificativo pseudo-anonimizzato dell’operatore dello sportello rete RADD. 
  
      
  
      # APPENDICE
      ## FILE ZIP
      L’allegato ad una operazione RADD deve essere un file ZIP avente i seguenti file:
      
      
      -  **metadati_destinatario.json:** file JSON* degli estremi del documento di identità del destinatario.
      
      -  **metadati_delegato.json:** file JSON* degli estremi del documento di identità del delegato.
      
      -  **delega.pdf:** Scansione della delega (solo in caso di delega). File di tipo “PDF/A”.
      
      -  **visura.pdf:** Scansione della visura (solo in caso di destinatario persona giuridica). File di tipo “PDF/A”.
      
      I file JSON devono rispettare le specifiche dello schema: [https://github.com/pagopa/pn-radd-alt/blob/5ae3b1c5c8517b42795d64b78590e8ceacf6aee5/docs/openapi/json-schema-identity-doc-info.json.](https://github.com/pagopa/pn-radd-alt/blob/5ae3b1c5c8517b42795d64b78590e8ceacf6aee5/docs/openapi/json-schema-identity-doc-info.json)
      
      
      Esempio di JSON con gli estremi della carta di identità:
      
          {
          "operationId": "c3a139-ca1e-4d4e-8",
          "docType": "CIE",
          "docNumber":" GA99999LI",
          "docIssuer": "Comune di Rho",
          "issueDate": "2023-11-20",
          "expireDate": "2033-11-20"
          }
  
      # PROCEDURA DI UPLOAD
      Per caricare il file ZIP sui sistemi PagoPA eseguire i seguenti step:
      
      1.  **Richiesta presigned Url**
      
          Invocare l'operazione documentUpload con cui prenotare il caricamento, passando i seguenti parametri:
          
          -  *operationId*: Identificativo univoco dell’operazione (generato dal software di gestione dello sportello RADD), da riportare nelle richieste successive.
          
          -  *checksum*: valorizzato con il checksum sha256, codificato in base 64, del contenuto binario del file zip.
          
          In risposta nel body si ottengono le seguenti informazioni:
          
          -  *url*: La presigned url che permette di caricare il file zip.
          
          -  *filekey*: Identificativo del file che verrà caricato.
          
          -  *secret*: chiave per l’upload.
      
      2.  **Upload del file ZIP**
      
          Per caricare il file Zip utilizzare una richiesta HTTP con metodo httpMethod PUT all'url restituito dall’operazione [documentUpload](#/documentOperations/documentUpload).
          
          In tale richiesta vanno aggiunti i seguenti header:
          
          -  *content-type*: valorizzato con “application/zip”.
          
          -  *x-amz-meta-secret*: valorizzato con il valore del campo secret della risposta di cui al punto 1.
          
          -  *x-amz-checksum-sha256*: valorizzato con il checksum sha256, codificato in base 64, del contenuto binario del file che verrà caricato.
      
      NOTA:
      
    -  Non va passato il JWT per l’autenticazione.
      
    -  Se l'operazione di upload è stata eseguita con successo, si otterrà come risposta http status 200 OK.
      
    -  Nell'header di questa risposta, si otterrà il campo *x-amz-version-id* che dovrà essere utilizzato per l’operazione seguente ([startActTransaction](#/actOperations/startActTransaction) / [startAorTransaction](#/aorOperations/startAorTransaction)), nel campo *versionToken* in corrispondenza del documento ad esso associato.
      
      # AMBIENTI
    -  **Ambiente di produzione:** [https://api.radd.notifichedigitali.it]()
      
      
    -  **Ambiente di collaudo(UAT):** [https://api.radd.uat.notifichedigitali.it]()
    
       Potrebbe subire modifiche/integrazioni in futuro, rimanendo comunque non-bloccante e rispettando il principio di retrocompatibilità
          
  
  contact:
    email: pn-supporto-enti@pagopa.it
  license:
    name: Licenza di PN
    url: 'https://notifichedigitali.pagopa.it/radd/index.html'

servers:
  - url: https://api.radd.notifichedigitali.it
    description: Ambiente di produzione
  - url: https://api.radd.uat.notifichedigitali.it
    description: Ambiente di collaudo

tags:
  - name: actOperations
    description: API di interrogazione per il recupero di  atti e attestazioni opponibili a terzi.
  - name: aorOperations
    description: API di interrogazione per il recupero di avvisi di avvenuta ricezione.
  - name: documentOperations
    description: API gestione file.

paths:
  /radd-net/api/v1/documents/upload:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    post:
      tags:
        - documentOperations
      description: >-
        API utilizzata per la richiesta della presigned URL utilizzata per il caricamento della scansione
        dei documenti e metadati presentati a sportello dal cliente. Il file deve essere in formato ZIP
        e la struttura dello zip deve seguire quanto specificato.
      operationId: documentUpload
      parameters:
        - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
        - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
        - $ref: '#/components/parameters/uid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'

  /radd-net/api/v1/download/{operationType}/{operationId}:
    ## SLA - Tempo risposta medio: < 10s; Timeout :20s
    parameters:
      - $ref: '#/components/parameters/operationType'
      - $ref: '#/components/parameters/operationId'
      - $ref: '#/components/parameters/attachmentId'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    get:
      tags:
        - documentOperations
      operationId: documentDownload
      description: API utilizzata per il download del frontespizio
      responses:
        200:
          description: "Ritorna il frontespizio"
          content:
            'application/pdf':
              schema:
#               type: object    # ONLY EXTERNAL
                type: string    # NO EXTERNAL
                format: byte    # NO EXTERNAL
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'

  /radd-net/api/v1/act/inquiry:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    parameters:
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
      - $ref: '#/components/parameters/uid'
      - $ref: '#/components/parameters/recipientTaxId'
      - $ref: '#/components/parameters/recipientType'
      - $ref: '#/components/parameters/qrCode'
      - $ref: '#/components/parameters/iun'
    get:
      tags:
        - actOperations
      operationId: actInquiry
      description: API utilizzata per la verifica della presenza a sistema di atti e attestazioni tramite iun o qrCode.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActInquiryResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'

  /radd-net/api/v1/aor/inquiry:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s"
    parameters:
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
      - $ref: '#/components/parameters/uid'
      - $ref: '#/components/parameters/recipientTaxId'
      - $ref: '#/components/parameters/recipientType'
    get:
      tags:
        - aorOperations
      operationId: aorInquiry
      description: API utilizzata per la verifica della presenza a sistema di avvisi di avvenuta ricezione per il cliente.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AORInquiryResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'


  /radd-net/api/v1/act/transaction/start:
    ## SLA - Tempo risposta medio: < 10s; Timeout: 20s. Tempo massimo polling (response.status.code = 0): 10s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - actOperations
      operationId: startActTransaction
      description: API utilizzata per la richiesta di avvio dell'operazione di scaricamento e consegna dell'atto e delle eventuali attestazioni.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActStartTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'


  /radd-net/api/v1/act/transaction/complete:
    ## SLA - Tempo risposta medio: < 1s, Timeout :3s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - actOperations
      operationId: completeActTransaction
      description: API utilizzata per la notifica del completamento dell'operazione di consegna dell'atto e delle eventuali attestazioni.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'
  /radd-net/api/v1/act/transaction/abort:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - actOperations
      operationId: abortActTransaction
      description: API utilizzata per la notifica  dell'annullamento dell'operazione di consegna dell'atto e delle eventuali attestazioni.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbortTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbortTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'
  /radd-net/api/v1/aor/transaction/start:
    ## SLA - Tempo risposta medio: < 1s; Timeout: 3s. Tempo massimo polling(response.status.code = 0): 10s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - aorOperations
      operationId: startAorTransaction
      description: API utilizzata per la richiesta di avvio delloperazione di scaricamento e consegna degli avvisi di avvenuta ricezione.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AorStartTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'



  /radd-net/api/v1/aor/transaction/complete:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - aorOperations
      operationId: completeAorTransaction
      description: API utilizzata per la notifica  del completamento dell'operazione di consegna dell'atto.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'

  /radd-net/api/v1/aor/transaction/abort:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - aorOperations
      operationId: abortAorTransaction
      description: API utilizzata per la notifica  dell'annullamento dell'operazione        di consegna del/degli avviso/i di avvenuta ricezione.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbortTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbortTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    DocumentUploadRequest:
      description: Richiesta di upload di un file zip contenente i documenti/metadati verso PagoPA
      type: object
      required:
        - operationId
        - checksum
      properties:
        operationId:
          type: string
        checksum:
          type: string
          example: "708F4C8216F30FA6007F8E2F316ECC935D94057202FC5D8008BCCC118EA12560"

    DocumentUploadResponse:
      description: Response della Richiesta di upload
      type: object
      properties:
        url:
          type: string
          example: "https://presignedurldemo.s3.eu-west-2.amazonaws.com/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJJWZ7B6WCRGMKFGQ%2F20180210%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20180210T171315Z&X-Amz-Expires=1800&X-Amz-Signature=12b74b0788aa036bc7c3d03b3f20c61f1f91cc9ad8873e3314255dc479a25351&X-Amz-SignedHeaders=host"
        fileKey:
          type: string
          example: "PN_RADD_FSU"
        secret:
          type: string
          example: "alow22ddw"
        status:
          $ref: '#/components/schemas/ResponseStatus'

    ActInquiryResponse:
      description: Response di verifica presenza atto ed eventuali attestazione opponibili a terzi
      type: object
      properties:
        result:
          type: boolean
        status:
          $ref: '#/components/schemas/ActInquiryResponseStatus'
    AORInquiryResponse:
      description: Response di verifica presenza AAR.
      type: object
      properties:
        result:
          type: boolean
          example: true
        status:
          $ref: '#/components/schemas/ResponseStatus'


    ActStartTransactionRequest:
      description: Richiesta  di completamento operazione.
      allOf:
        - $ref: '#/components/schemas/AorStartTransactionRequest'
      properties:
        qrCode:
          description: in alternativa allo iun
          type: string
        iun:
          description: in alternativa al qrCode
          type: string

    StartTransactionResponse:
      description: Response alla richiesta di avvio della transazione
      type: object
      properties:
        downloadUrlList:
          type: array
          items:
            $ref: '#/components/schemas/DownloadUrl'
        status:
          $ref: '#/components/schemas/StartTransactionResponseStatus'

    DownloadUrl:
      description: contiene l'url per il download e il meccanismo richiesto di autenticazione
      type: object
      properties:
        url:
          type: string
          description: url per il download
        needAuthentication:
          type: boolean
          description: indica se inviare l'header di autenticazione
        documentType:
          type: string
          description: categoria del documento, ATTO_NOTIFICATO oppure ATTESTAZIONE_OPPONIBILE_A_TERZI


    AorStartTransactionRequest:
      description: Richiesta  di completamento operazione
      type: object
      required:
        - versionToken
        - operationId
        - recipientTaxId
        - recipientType
        - fileKey
        - checksum
      properties:
        versionToken:
          type: string
        operationId:
          type: string
        recipientTaxId:
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          type: string
          example: "TNTGTR76E21H751S"
        recipientType:
          type: string
          enum: ["PF", "PG"]
          example: "PF"
        delegateTaxId:
          x-field-extra-annotation: "@lombok.ToString.Exclude" # NO EXTERNAL
          type: string
          example: "RFRGRZ66E21H751B"
        fileKey:
          type: string
          example: "XXXXX"
        checksum:
          type: string
          example: "YTlkZGRkNzgyZWM0NzkyODdjNmQ0NGE5ZDM2YTg4ZjQ5OTE1ZGM2NjliYjgzNzViMTZhMmE5ZmE3NmE4ZDQzNwo="
          description: Checksum SHA256 del file caricato nella chiamata di documetUpload codificato in base64
        operationDate:
          type: string
          format: date-time
          description: Data/ora di completamento della transazione in formato RFC3339.
          example: "2022-06-21T11:44:28Z"

    CompleteTransactionRequest:
      description: Richiesta  di chiusura della transazione
      type: object
      required:
        - operationId
        - operationDate
      properties:
        operationId:
          type: string
          example: "2bb5c29e0cf411ed861d0242ac120002"
        operationDate:
          type: string
          format: date-time
          description: Data/ora di completamento della transazione,  espressa in formato RFC3339.
          example: "2022-06-21T11:44:28Z"
    CompleteTransactionResponse:
      description: Response alla richiesta di chiusura della transazione
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TransactionResponseStatus'

    AbortTransactionRequest:
      description: Richiesta  di cancellazione della transazione
      type: object
      required:
        - operationId
        - operationDate
      properties:
        operationId:
          type: string
          example: "2bb5c29e0cf411ed861d0242ac120002"
        reason:
          type: string
          default: "abort"
        operationDate:
          type: string
          format: date-time
          description: Data/ora di annullamento della transazione,  espressa in formato RFC3339.
          example: "2022-06-21T11:44:28Z"
    AbortTransactionResponse:
      description: Response alla richiesta di chiusura della transazione
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TransactionResponseStatus'

    ResponseStatus:
      description: Stato della response
      type: object
      properties:
        code:
          description: |
            Return code.
            * 0 -> OK
            * 99 -> KO
          type: number
          enum: [0, 99]
        message:
          type: string
          example: OK

    StartTransactionResponseStatus:
      description: Stato della response
      allOf:
        - $ref: '#/components/schemas/ResponseStatus'
        - type: object
          properties:
            code:
              description: |
                Return code.
                * 0 -> OK
                * 2 -> NotReady (documenti temporaneamente non disponibili per ragioni tecniche, ritentare dopo il tempo specificato nel retryAfter con una nuova transaction)
                * 3 -> Stampa già eseguita
                * 4 -> Documenti non disponibili
                * 5 -> Codice operationId già presente
                * 10 -> Input non valido
                * 80 -> Notifica annullata dalla PA
                * 99 -> KO
              type: number
              enum: [0, 99, 2,4,3,5,10,80]
            retryAfter:
              description: Tempo, espresso in ms comunicato  al chiamante, trascorso il quale è possibile effettuare un nuovo tentativo di avvio della transazione.
              type: number
              example: 670

    TransactionResponseStatus:
      description: Stato della response
      allOf:
        - $ref: '#/components/schemas/ResponseStatus'
        - type: object
          properties:
            code:
              description: |
                Return code.
                * 0 -> OK (Anche in caso di  chiamata successiva con identici parametri)
                * 1 -> Transazione inesistente
                * 2 -> Transazione già completata (Messaggio di errore differente se già completata per chiamata a complete piuttosto che abort)
                * 99 -> KO
              type: number
              enum: [0,1,2,99]

    ActInquiryResponseStatus:
      description: Stato della response
      allOf:
        - $ref: '#/components/schemas/ResponseStatus'
        - type: object
          properties:
            code:
              description: |
                Return code.
                * 0 -> OK
                * 2 -> NotReady (documenti temporaneamente non disponibili per ragioni tecniche, ritentare dopo il tempo specificato nel retryAfter)
                * 3 -> Stampa già eseguita
                * 4 -> Documento non più disponibili
                * 10 -> Input non valido
                * 80 -> Notifica annullata dalla PA
                * 99 -> KO generico
              type: number
              enum: [0,2,3,4,10,80,99]


  parameters:
    uid:
      name: uid
      description: Identificativo del client
      in: header
      required: true
      schema:
        type: string
      example: 00001-000-2024_02_02T00:00:00
    recipientTaxId:
      name: recipientTaxId
      description: Codice Fiscale Destinatario
      in: query
      required: true
      schema:
        type: string
      example: TNTGTR76E21H751S
    recipientType:
      name: recipientType
      description: Sigla, Persona fisica o giuridica
      in: query
      required: true
      schema:
        type: string
        enum: ["PF", "PG"]
      example: PF
    delegateTaxId:
      name: delegateTaxId
      description: Codice Fiscale Delegato
      in: query
      schema:
        type: string
      example: TNTGTR76E21H751S
    qrCode:
      name: qrCode
      description: Qr Code presente sull'avviso di Avvenuta ricezione. Da usare in alternativa a "iun".
      in: query
      required: false
      schema:
        type: string
      example: "TBD"
    iun:
      name: iun
      description: IUN da ricercare per il destinatario. Da usare in alternativa a qrCode.
      in: query
      required: false
      schema:
        type: string
      example: "TBD"
    operationId:
      name: operationId
      description: Id della pratica
      in: path
      required: true
      schema:
        type: string
      example: "asd123"
    operationType:
      name: operationType
      description: Tipo di operazione aor o act
      in: path
      required: true
      schema:
        type: string
        enum: ["aor", "act"]
      example: aor
    attachmentId:
      name: attachmentId
      description: Identificativo file
      in: query
      required: false
      schema:
        type: string


  responses:
    Forbidden:
      description: Forbidden
    NotFound:
      description: Not found
    Invalid:
      description: Bad Request
    NotAllowed:
      description: Method not allowed
    InternalError:
      description: Internal Server Error
    Unauthorized:
      description: Unauthorized


  securitySchemes:
    APIKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

security:
  - APIKeyAuth: []