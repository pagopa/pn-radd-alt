openapi: 3.0.1
info:
  termsOfService: https://notifichedigitali.pagopa.it/radd/index.html
  x-api-id: api-internal-radd-net # NO EXTERNAL
  #  x-api-id: api-external-radd-net # ONLY EXTERNAL
  title: 'Piattaforma Notifiche: API B2B per gli operatori RADD'
  x-summary: 'Piattaforma Notifiche: API B2B per gli operatori RADD'
  version: '1.0.0'
  description: >
    # Abstract
    
      API utilizzate dai soggetti abilitati (Operatori RADD) all’utilizzo dei
      sistemi **RADD** (Rete di Assorbimento del Divario Digitale) per rendere
      fruibile **SEND** anche a destinatari in condizione di Digital Divide,
      intesi come non dotati di **SPID** o di **CIE**, che per questo non possono
      accedere alla notifica tramite portale web o per mezzo di **app IO**. 
    
    
      Esistono due casi d’uso **RADD**:  
    
    
      - **ACT**: Richiesta degli atti di una determinata notifica tramite 
    i dati presenti nell’avviso di avvenuta ricezione (AAR). 
    
    
      - **AOR**: Richiesta degli avvisi di avvenuta ricezione (AAR) non
      recapitati per irreperibilità.
    
    
      # Autenticazione 
    
      L'ente che si integra con le API REST della RADD deve autenticarsi tramite
      JSON Web Token (JWT) firmato con algoritmo a chiave asimmetrica RS256. 
    
      Il token deve essere passato sul header Authorization della richiesta nella
      forma: `Authorization: Bearer < token >`
    
      ## Identificativo utente
    
      Nelle api che richiedono il parametro *Uid* questo deve essere valorizzato con
      un identificativo pseudo-anonimizzato dell’operatore dello sportello rete RADD.
      Questo campo servirà in caso di indagine per capire l'operatore dello sportello
      che ha eseguito l'operazione. E' cura del software dello sportello valorizzare questo
      parametro con un identificativo che non riporti dati personali (es: non usare 
      email, user name, codice fiscale).
    
      # CASO D’USO ACT
    
      Cittadini in possesso della AAR (Avviso di Avvenuta Ricezione) richiede allo
      sportello RADD la stampa degli atti della notifica. 
    
    
      Operazioni utilizzate, in sequenza temporale: 
    
    
      1. **Verifica della presenza della notifica**
    
         Il software di gestione dello sportello RADD chiama l’operazione [actInquiry](#/actOperations/actInquiry)
      per verificare l’esistenza della notifica tramite *qrCode* o, in assenza 
      del lettore ottico, tramite lo *IUN* (identificativo univoco della  notifica), 
      entrambi presenti nell’AAR. 
      Il servizio risponde con il campo *result* valorizzato a true e *code* uguale a 0 se sono presenti 
      documenti da stampare.
    
    
      2. **Upload dei documenti di identificazione del destinatario ed eventuale
      delegato**
    
         Se sono presenti documenti da stampare (*result* = true e *code* =  0) 
      il software di gestione dello sportello RADD deve generare un file *ZIP*
      (specifiche in appendice) contenente gli estremi dei documenti del destinatario
      e dell'eventuale delegato da caricare sui sistemi PagoPA. Per caricare il file
      ZIP utilizzare la **procedura di upload** specificata in appendice.
    
    
      3. **Richiesta documenti da stampare**
    
         Se l'operazione di upload è stata eseguita con successo (risposta http 
      status 200 OK) invocare l’operazione [startActTransaction](#/actOperations/startActTransaction) 
      per ottenere la lista dei documenti da stampare (compreso il frontespizio*).
    
         Alcuni parametri da passare in input sono recuperati dalle chiamate di upload:
    
         - *filekey*: recuperato dalla risposta alla chiamata
      dell’operazione [documentUpload](#/documentOperations/documentUpload).
         - *checksum*: del file zip, lo valore inviato in input alla documentUpload. 
         - *versionToken*: valore ottenuto dall'operazione PUT di upload.
    
          L’operazione [startActTransaction](#/actOperations/startActTransaction) restituisce una lista di url dei documenti da stampare (compreso il primo riferito al frontespizio)*. 
    
         Per ogni documento vengono restituiti i seguenti campi:
    
         - *url*: url del documento da stampare.
         - *needAuthentication*: Se true all’invocazione della url deve essere passato il JWT
      dell’autenticazione, altrimenti deve essere omesso.
         - *documentType*: stringa che rappresenta il tipo di documento.
    
         ***Frontespizio**: Per questione di privacy SEND produrrà un frontespizio
      per il plico dei documenti stampati dall’operatore RADD. Il frontespizio
      riporterà semplicemente il nome e il cognome del destinatario e ha la funzione
      di coprire i dati dell'atto di notifica.
    
    
      4. **Download documenti**
    
         Per ogni url restituita dalla [startActTransaction](#/actOperations/startActTransaction), 
      eseguire una richiesta in GET per scaricare il documento. Se il campo *needAuthentication* è valorizzato
      a true bisogna necessariamente inviare anche il JWT nell’header Authorization, 
      altrimenti non deve essere spedito.
    
    
      5. **Chiusura dell'operazione**
    
         - **5a** **Chiusura dell’operazione con successo**
    
           Alla consegna dei documenti stampati all'utente che si è rivolto allo sportello RADD, 
           deve essere invocata l’operazione [completeActTransaction](#/actOperations/completeActTransaction) per terminare il processo.
    
         - **5b** **Chiusura dell’operazione senza successo** 
    
           In caso di operazione di stampa conclusa senza successo o per un qualsiasi problema, 
           invocare l’operazione [abortActTransaction](#/actOperations/abortActTransaction) per abortire il processo. 
    
    
    
      # CASO D’USO AOR
    
      Cittadini risultati irreperibili nell'invio cartaceo dell'AAR, muniti di Codice Fiscale, 
      sprovvisti di accesso ad internet, SPID o CIE o senza competenze digitali, richiedono 
      la stampa delle AAR (Avviso di Avvenuta Ricezione) non consegnate presso lo sportello RADD.
    
    
      1. **Verifica della presenza della notifica** 
    
         Il software di gestione dello sportello RADD chiama l’operazione [aorInquiry](#/aorOperations/aorInquiry) 
      per verificare l’esistenza di notifiche per il quale l’utente è risultato irreperibile 
      e non stampate in precedenza. 
      Il servizio risponde con il campo *result* valorizzato a true e *code* uguale a 0 
      se sono presenti documenti da stampare. 
    
    
      2. **Upload dei documenti di identificazione del destinatario ed eventuale delegato** 
    
         Se sono presenti documenti da stampare (*result* = true e *code* =  0) 
      il software di gestione dello sportello RADD deve generare un file *ZIP*
      (specifiche in appendice) contenente gli estremi dei documenti del destinatario
      e dell'eventuale delegato da caricare sui sistemi PagoPA. Per caricare il file
      ZIP utilizzare la **procedura di upload** specificata in appendice.
    
    
      3.  **Richiesta documenti da stampare**
    
          Se l'operazione di upload è stata eseguita con successo (risposta http status 200 OK)  
      invocare l’operazione [startAorTransaction](#/aorOperations/startAorTransaction) 
      per ottenere l’elenco di url degli AAR delle notifiche non consegnate da stampare 
      (compreso l'url il frontespizio*).
    
          Alcuni parametri da passare in input sono recuperati dalle chiamate di upload:
    
          - *filekey*: recuperato dalla risposta alla chiamata
      dell’operazione [documentUpload](#/documentOperations/documentUpload).
          - *checksum*: del file zip, lo valore inviato in input alla documentUpload. 
          - *versionToken*: valore ottenuto dall'operazione PUT di upload.
    
          L’operazione [startActTransaction](#/actOperations/startActTransaction) 
      restituisce una lista di url dei documenti da stampare (compreso il primo riferito
      al frontespizio)*. 
    
          Per ogni documento vengono restituiti i seguenti campi:
    
          - *url*: url del documento da stampare.
          - *needAuthentication*:  booleano. Se true all’invocazione della url deve essere passato il JWT dell’autenticazione.
          - *documentType*: stringa che rappresenta il tipo di documento da scaricare.
    
          ***Frontespizio**: Per questione di privacy SEND produrrà un frontespizio
      per il plico dei documenti stampati dall’operatore RADD. Il frontespizio
      riporterà semplicemente il nome e il cognome del destinatario e ha la funzione
      di coprire i dati della notifica.   
    
      4. **Download documenti**
    
          Per ogni url restituita dalla [startAorTransaction](#/aorOperations/startActTransaction), 
      eseguire una richiesta in GET per scaricare il documento. Se il campo *needAuthentication* è valorizzato
      a true bisogna necessariamente inviare anche il JWT nell’header Authorization, 
      altrimenti non deve essere spedito.
    
    
       5. **Chiusura dell’operazione**
    
          - **5a Chiusura dell’operazione con successo**
    
            Alla consegna dei documenti stampati all'utente che si è rivolto allo sportello RADD, 
          deve essere invocata l’operazione  [completeAorTransaction](#/aorOperations/completeAorTransaction) per terminare il processo.  
    
          - **5b Chiusura dell’operazione senza successo**
    
            In caso di operazione di stampa conclusa senza successo o per un qualsiasi problema, 
          invocare l’operazione [abortAorTransaction](#/aorOperations/abortAorTransaction) per abortire il processo. 
    
    
      # APPENDICE
    
    
      ## FILE ZIP
    
      L’allegato ad una operazione RADD deve essere un file ZIP avente i seguenti file:
    
      -  `metadati_destinatario.json` file JSON* degli estremi del documento di identità del destinatario.
      -  `metadati_delegato.json` file JSON* degli estremi del documento di identità del delegato.
      -  `delega.pdf` Scansione della delega (solo in caso di delega). File di tipo “PDF/A”.
      -  `visura.pdf` Scansione della visura (solo in caso di destinatario persona giuridica). File di tipo “PDF/A”.
    
      I file JSON contenenti gli estremi del documento d'identità 
      devono rispettare le specifiche dello JSON schema: [json-schema-identity-doc-info.json](https://github.com/pagopa/pn-radd-alt/blob/5ae3b1c5c8517b42795d64b78590e8ceacf6aee5/docs/openapi/json-schema-identity-doc-info.json).
    
    
      Esempio di JSON con gli estremi della carta di identità:
      ```json
        {
          "operationId": "c3a139-ca1e-4d4e-8",
          "docType": "CIE",
          "docNumber":" GA99999LI",
          "docIssuer": "Comune di Rho",
          "issueDate": "2023-11-20",
          "expireDate": "2033-11-20"
        }
     ```
      Per effettuare la verifica prima dell'invio del file sono disponibili diverse 
      librerie per tutti i linguaggi di programmazione (rif: https://json-schema.org/implementations)
    
      Per una verifica rapida è possibile utilizzare il sito [https://www.jsonschemavalidator.net/](https://www.jsonschemavalidator.net/s/I9b2tHH0)

      # PROCEDURA DI UPLOAD
    
      I passi per caricare il file ZIP sui SEND sono i seguenti:
    
      1.  **Richiesta presigned Url**
    
          Invocare l'operazione [documentUpload](#/documentOperations/documentUpload) 
        con cui ottenere l'url di caricamento dei file passando i seguenti parametri:
    
          -  *operationId*: Identificativo univoco dell’operazione (generato dal software di gestione 
               dello sportello RADD), da riportare anche nelle richieste successive.
          -  *checksum*: valorizzato con il checksum sha256, codificato in base 64, 
               del contenuto binario del file zip.
               (esempio per verifica calcolo del checksum: `cat <filezip> | openssl dgst -binary -sha256 | openssl base64`)
    
          In risposta nel body si ottengono le seguenti informazioni da utilizzare nelle chiamate successive:
    
          -  *url*: La presigned url che permette di caricare il file zip.
          -  *filekey*: Identificativo del file che verrà caricato.
          -  *secret*: chiave per l’upload.
    
      2.  **Upload del file ZIP**
    
          Per caricare il file Zip utilizzare una richiesta HTTP con metodo httpMethod PUT all'url 
        restituito dall’operazione [documentUpload](#/documentOperations/documentUpload).
    
           In tale richiesta vanno aggiunti i seguenti header:
    
          -  *content-type*: valorizzato con “application/zip”.
          -  *x-amz-meta-secret*: valorizzato con il valore del campo secret della risposta di cui al punto 1.
          -  *x-amz-checksum-sha256*: valorizzato con il checksum sha256, codificato in base 64, 
               del contenuto binario del file che verrà caricato.
    
      NOTA:
        -  Non va passato il JWT per l’autenticazione.
        -  Se l'operazione di upload è stata eseguita con successo, si otterrà come 
           risposta http status 200 OK.
        -  Nell'header di questa risposta, si otterrà il campo *x-amz-version-id* che dovrà 
           essere utilizzato per l’operazione seguente ([startActTransaction](#/actOperations/startActTransaction) / [startAorTransaction](#/aorOperations/startAorTransaction)), nel campo *versionToken* in corrispondenza del documento ad esso associato.
  

  contact:
    email: pn-supporto-radd@pagopa.it
  license:
    name: Licenza di PN
    url: 'https://notifichedigitali.pagopa.it/radd/index.html'

servers:
  - url: https://api.radd.notifichedigitali.it
    description: Ambiente di produzione
  - url: https://api.radd.uat.notifichedigitali.it
    description: Ambiente di collaudo UAT

tags:
  - name: actOperations
    description: API di interrogazione per il recupero dei documenti della notifica dall'AAR.
  - name: aorOperations
    description: API di interrogazione per il recupero di avvisi di avvenuta ricezione per destinatari irreperibili.
  - name: documentOperations
    description: API gestione file.

paths:
  /radd-net/api/v1/documents/upload:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    post:
      tags:
        - documentOperations
      description: >-
        API utilizzata per la richiesta della presigned URL utilizzata per il caricamento della scansione
        dei documenti e metadati presentati a sportello dal cliente. Il file deve essere in formato ZIP
        e la struttura dello zip deve seguire quanto specificato in documentazione.
      operationId: documentUpload
      parameters:
        - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
        - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
        - $ref: '#/components/parameters/uid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'

  /radd-net/api/v1/download/{operationType}/{operationId}:
    ## SLA - Tempo risposta medio: < 10s; Timeout :20s
    parameters:
      - $ref: '#/components/parameters/operationType'
      - $ref: '#/components/parameters/operationId'
      - $ref: '#/components/parameters/attachmentId'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    get:
      tags:
        - documentOperations
      operationId: documentDownload
      description: API utilizzata per il download del frontespizio
      responses:
        200:
          description: Ritorna il PDF del frontespizio
          content:
            'application/pdf':
              schema:
                #               type: object    # ONLY EXTERNAL
                type: string    # NO EXTERNAL
                format: byte    # NO EXTERNAL
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'

  /radd-net/api/v1/act/inquiry:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    parameters:
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
      - $ref: '#/components/parameters/uid'
      - $ref: '#/components/parameters/recipientTaxId'
      - $ref: '#/components/parameters/recipientType'
      - $ref: '#/components/parameters/qrCode'
      - $ref: '#/components/parameters/iun'
    get:
      tags:
        - actOperations
      operationId: actInquiry
      description: API utilizzata per la verifica della presenza a sistema di atti e attestazioni tramite iun o qrCode.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActInquiryResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'

  /radd-net/api/v1/aor/inquiry:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s"
    parameters:
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
      - $ref: '#/components/parameters/uid'
      - $ref: '#/components/parameters/recipientTaxId'
      - $ref: '#/components/parameters/recipientType'
    get:
      tags:
        - aorOperations
      operationId: aorInquiry
      description: API utilizzata per la verifica della presenza a sistema di avvisi di avvenuta ricezione per il cliente.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AORInquiryResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'


  /radd-net/api/v1/act/transaction/start:
    ## SLA - Tempo risposta medio: < 10s; Timeout: 20s. Tempo massimo polling (response.status.code = 0): 10s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - actOperations
      operationId: startActTransaction
      description: API utilizzata per la richiesta di avvio dell'operazione di scaricamento e consegna dell'atto e delle eventuali attestazioni.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActStartTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'


  /radd-net/api/v1/act/transaction/complete:
    ## SLA - Tempo risposta medio: < 1s, Timeout :3s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - actOperations
      operationId: completeActTransaction
      description: API utilizzata per la notifica del completamento dell'operazione di consegna dell'atto e delle eventuali attestazioni.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'
  /radd-net/api/v1/act/transaction/abort:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - actOperations
      operationId: abortActTransaction
      description: API utilizzata per la notifica  dell'annullamento dell'operazione di consegna dell'atto e delle eventuali attestazioni.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbortTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbortTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'
  /radd-net/api/v1/aor/transaction/start:
    ## SLA - Tempo risposta medio: < 1s; Timeout: 3s. Tempo massimo polling(response.status.code = 0): 10s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - aorOperations
      operationId: startAorTransaction
      description: API utilizzata per la richiesta di avvio delloperazione di scaricamento e consegna degli avvisi di avvenuta ricezione.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AorStartTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'



  /radd-net/api/v1/aor/transaction/complete:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - aorOperations
      operationId: completeAorTransaction
      description: API utilizzata per la notifica  del completamento dell'operazione di consegna dell'atto.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        405:
          $ref: '#/components/responses/NotAllowed'
        500:
          $ref: '#/components/responses/InternalError'

  /radd-net/api/v1/aor/transaction/abort:
    ## SLA - Tempo risposta medio: < 1s; Timeout :3s
    parameters:
      - $ref: '#/components/parameters/uid'
      - $ref: 'remote-refs.yaml#/components/parameters/cxTypeAuthFleet'       # NO EXTERNAL
      - $ref: 'remote-refs.yaml#/components/parameters/cxIdAuthFleet'         # NO EXTERNAL
    post:
      tags:
        - aorOperations
      operationId: abortAorTransaction
      description: API utilizzata per la notifica dell'annullamento dell'operazione di consegna del/degli avviso/i di avvenuta ricezione.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbortTransactionRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbortTransactionResponse'
        400:
          $ref: '#/components/responses/Invalid'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbid